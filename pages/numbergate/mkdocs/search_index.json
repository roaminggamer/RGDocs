{
    "docs": [
        {
            "location": "/", 
            "text": "Parental Gates (Numberic)\n\n\n\n\nParental Gates (Numberic)\n is a module to create 'numeric simple instruction gates' that comply with \nApple's Parental Gates Guide.\n\n\n\n\n \n \n \n \n\n\nNeed a child-gate!  Don't spend hours coding your own.  Just use the provided art, or supply your own, and get done fast!\n\n\nThis module:\n\n\n\n\nIs fully configurable, \n\n\nComes with the source code, and\n\n\nCotains four samples with art.\n\n\n\n\n\n\nBasic Usage\n\n\nA. Activate Plugin\n\n\nFirst, purchase the module on \nCorona Marketplace\n to activate it.\n\n\nB. Require it\n\n\nRequire the module where you need it.\n\n\nlocal gate = require \ngate\n\n\n\n\n\nC. Code Listeners\n\n\nWrite a success listener and an optional cancel listener.\n\n\nlocal function onSuccess()\n   -- User completed gate.  Do something now.\nend\n\nlocal function onCancel()\n   -- User canclled gate.  Do something?\nend\n\n\n\n\n\nD. Show The Gate\n\n\nShow the gate using provided art or your own.\n\n\ngate.new( {\n   imagesPath   = \nimages/numbers_ex1\n,\n   onSuccess    = onSuccess,\n   onCancel     = onCancel,\n} )\n\n\n\n\nArt\n\n\nThis gate comes with four samples of art, but creating your own is easy.  \n\n\n\n\nTip 1:\n See the supplied art to see how your images should fit together.\n\n\nTip 2:\n All images should be PNGs.\n\n\nTip 3:\n All buttons have two versions: XXX_unsel.png and XXX_sel.png, representing the unselected and selected representations.\n\n\n\n\nDIY Gate Art In 5 Easy Steps\n\n\n\n\nCreate the background tray image.\n\n\nCreate a number frame image, ensuring it is proportional to tray image.\n\n\nCreate the number buttons 0 .. 9, ensuring they are proportional to the tray image.\n\n\nCreate the back button (same size as the number button images).\n\n\nCreate the exit button (any size you like).\n\n\n\n\n \n\n\nWhen you are done, you will have 26 pieces of art:\n\n\n\n\n1 Tray image.\n\n\n1 Frame image.\n\n\n20 Number buttons images.\n\n\n2 Back button images.\n\n\n2 Exit button images.\n\n\n\n\nConfiguring Gates\n\n\nThe gate builder function \nnew()\n takes a single argument: \nparams\n\n\n\n\nTip:\n The word \nproportional\n is used a lot below.  This means the value is a number relative to the full sized art.  It may later be auto-scaled to make things fit.  The key thing to remember is, once you get a gate to look the way you want on one device, it will look good on all devices and have the same \nproportional\n layout.\n\n\n\n\n\n\nparams\n (required) - A table of named settings.  Only \nimagesPath\n  amd \nonSuccess\n are required.  All others are optional\n\n\nimagesPath\n - Path to images folder containg gate are you want to use.\n\n\ntrayColor\n (\n{ 1, 1, 1 }\n) - Color to shade tray.png with. \n\n\nframeColor\n (\n{ 1, 1, 1 }\n) - Color to shade frame.png with.\n\n\nedgeOffset\n (\n20\n) - Minimum proportional edge gap/offset. \n\n\nexitButtonOffsetX\n (\n60\n) - Proportionally offset from left-edge of tray.png\n\n\nexitButtonOffsetY\n (\n60\n) - Proportionally offset from top-edge of tray.png\n\n\nnumberCount\n (\n4\n) - Count of numbers to enter.\n\n\nnumberTween\n (\n40\n) - Proportional spacing between answer frames.\n\n\nnumberOX\n (\n0\n) - Proportional x-offset versus frame.\n\n\nnumberOY\n (\n0\n) - Proportional y-offset versus frame.\n\n\nbuttonTween\n (\n30\n) - Proportional pixel-offset between number buttons.\n\n\ntitleFont\n (\nnative.systemFontBold\n) - Font to use for tray title.\n\n\ntitleFontColor\n (\n{ 0, 0, 0 }\n) - Color to use for tray title.\n\n\ntitleFontSize\n (\n52\n) - Font size to use for tray title.\n\n\nnumberFont\n (\ntitleFont\n) - Font to use for answer numbers.\n\n\nnumberFontColor\n (\n{ 0, 0, 0 }\n) - Color to use for answer numbers.\n\n\nnumberFontSize\n (\n100\n) - Font size to use for answer numbers.\n\n\ninstructionsFont\n (\nnative.systemFont\n) - Font to use for instructions.\n\n\ninstructionsFontColor\n (\n{ 0, 0, 0 }\n) - Color to use for instructions.\n\n\ninstructionsFontSize\n (\n60\n) - Font size to use for instructions.\n\n\nquestionFont\n (\nnative.systemFont\n) - Font to use for question.\n\n\nquestionFontColor\n (\n{ 0, 0, 0 }\n) - Color to use for question.\n\n\nquestionFontSize\n (\n65\n) - Font size to use for question.\n\n\nshakeAmplitude\n (\n10\n) - How much to shake screen if wrong answer entered.\n\n\nshakeTime\n (\n500\n) - Shake for milliseconds if wrong answer entered.\n\n\ncompleteDelay\n (\n333\n) - If correct answer given, wait this long to close dialog.\n\n\nonSuccess\n (\nfunction() end\n) - Reference to your 'correct answer' listener.\n\n\nonCancel\n (\nfunction() end\n) - Reference to your 'canceled dialog' listener.\n\n\ntitle\n (\n\"PARENTAL GATE\"\n) - Title of gate.\n\n\ninstructions\n (\n\"to continue tap:\"\n) - Intructions to show.\n\n\nverticalRatios\n  - Table of named values to proportionally adjust vertical position of gate elements.  See \nverticalRatios\n below.\n\n\nnumberNames\n - Table to translate numbers to strings. See \nnumberNames\n below.\n\n\n\n\n\n\n\n\nverticalRatios\n\n\nThese are the default vertical ratios (expressed as percentage of tray.png height):\n\n\nlocal verticalRatios  { \n    title           = 0.08, -- Title\n    numbers             = 0.28, -- Numbers\n    instructions    = 0.45, -- Instructions\n    question        = 0.55, -- Question\n    buttons             = 0.71, -- Inputs\n}\n\n\n\n\nIn example two, these are adjusted because the title isn't shown:\n\n\nlocal myGate = gate.new( {\n      imagesPath              = \nimages/numbers_ex2\n,\n      onSuccess               =  onSuccess,\n      onCancel                = onCancel,\n      frameColor              = { 123/255, 1, 191/255 },\n      trayColor               = { 0.2, 0.3, 0.5 },\n      instructionsFontColor   = { 1,1,1 },\n      questionFontColor       = { 1, 1, 0 },\n      title                   = \n, -- No title!    \n      instructions            = \nenter these numbers:\n,\n\n      -- Adjust vertical layout\n      verticalRatios          =  \n      { \n         title          = 0.0,\n         numbers        = 0.22,\n         instructions   = 0.40,\n         question       = 0.52,\n         buttons        = 0.68,\n      },\n   } )\n\n\n\n\nnumberNames\n\n\nThe default \nnumberNames\n table is defined as:\n\n\nlocal numberNames = {}\nnumberNames[0] = \nZERO\n\nnumberNames[1] = \nONE\n\nnumberNames[2] = \nTWO\n\nnumberNames[3] = \nTHREE\n\nnumberNames[4] = \nFOUR\n\nnumberNames[5] = \nFIVE\n\nnumberNames[6] = \nSIX\n\nnumberNames[7] = \nSEVEN\n\nnumberNames[8] = \nEIGHT\n\nnumberNames[9] = \nNINE\n\n\n\n\n\nIf you wanted to use \nItalian\n, you could do this:\n\n\nlocal numberNames = {}\nnumberNames[0] = \nZERO\n\nnumberNames[1] = \nUNO\n\nnumberNames[2] = \nDUO\n\nnumberNames[3] = \nTRE\n\nnumberNames[4] = \nQUATTRO\n\nnumberNames[5] = \nCINQUE\n\nnumberNames[6] = \nSEI\n\nnumberNames[7] = \nSETTE\n\nnumberNames[8] = \nOTTO\n\nnumberNames[9] = \nNOVE\n\n\ngate.new( {\n   imagesPath   = \nimages/numbers_ex1\n,\n   onSuccess    = onSuccess,\n   onCancel     = onCancel,\n   numberNames = numberNames\n} )\n\n\n\n\n\n\n  Copyright \n Roaming Gamer, LLC. 2008-2017; All Rights Reserved", 
            "title": "About"
        }, 
        {
            "location": "/#parental-gates-numberic", 
            "text": "Parental Gates (Numberic)  is a module to create 'numeric simple instruction gates' that comply with  Apple's Parental Gates Guide.            Need a child-gate!  Don't spend hours coding your own.  Just use the provided art, or supply your own, and get done fast!  This module:   Is fully configurable,   Comes with the source code, and  Cotains four samples with art.", 
            "title": "Parental Gates (Numberic)"
        }, 
        {
            "location": "/#basic-usage", 
            "text": "", 
            "title": "Basic Usage"
        }, 
        {
            "location": "/#a-activate-plugin", 
            "text": "First, purchase the module on  Corona Marketplace  to activate it.", 
            "title": "A. Activate Plugin"
        }, 
        {
            "location": "/#b-require-it", 
            "text": "Require the module where you need it.  local gate = require  gate", 
            "title": "B. Require it"
        }, 
        {
            "location": "/#c-code-listeners", 
            "text": "Write a success listener and an optional cancel listener.  local function onSuccess()\n   -- User completed gate.  Do something now.\nend\n\nlocal function onCancel()\n   -- User canclled gate.  Do something?\nend", 
            "title": "C. Code Listeners"
        }, 
        {
            "location": "/#d-show-the-gate", 
            "text": "Show the gate using provided art or your own.  gate.new( {\n   imagesPath   =  images/numbers_ex1 ,\n   onSuccess    = onSuccess,\n   onCancel     = onCancel,\n} )", 
            "title": "D. Show The Gate"
        }, 
        {
            "location": "/#art", 
            "text": "This gate comes with four samples of art, but creating your own is easy.     Tip 1:  See the supplied art to see how your images should fit together.  Tip 2:  All images should be PNGs.  Tip 3:  All buttons have two versions: XXX_unsel.png and XXX_sel.png, representing the unselected and selected representations.", 
            "title": "Art"
        }, 
        {
            "location": "/#diy-gate-art-in-5-easy-steps", 
            "text": "Create the background tray image.  Create a number frame image, ensuring it is proportional to tray image.  Create the number buttons 0 .. 9, ensuring they are proportional to the tray image.  Create the back button (same size as the number button images).  Create the exit button (any size you like).      When you are done, you will have 26 pieces of art:   1 Tray image.  1 Frame image.  20 Number buttons images.  2 Back button images.  2 Exit button images.", 
            "title": "DIY Gate Art In 5 Easy Steps"
        }, 
        {
            "location": "/#configuring-gates", 
            "text": "The gate builder function  new()  takes a single argument:  params   Tip:  The word  proportional  is used a lot below.  This means the value is a number relative to the full sized art.  It may later be auto-scaled to make things fit.  The key thing to remember is, once you get a gate to look the way you want on one device, it will look good on all devices and have the same  proportional  layout.    params  (required) - A table of named settings.  Only  imagesPath   amd  onSuccess  are required.  All others are optional  imagesPath  - Path to images folder containg gate are you want to use.  trayColor  ( { 1, 1, 1 } ) - Color to shade tray.png with.   frameColor  ( { 1, 1, 1 } ) - Color to shade frame.png with.  edgeOffset  ( 20 ) - Minimum proportional edge gap/offset.   exitButtonOffsetX  ( 60 ) - Proportionally offset from left-edge of tray.png  exitButtonOffsetY  ( 60 ) - Proportionally offset from top-edge of tray.png  numberCount  ( 4 ) - Count of numbers to enter.  numberTween  ( 40 ) - Proportional spacing between answer frames.  numberOX  ( 0 ) - Proportional x-offset versus frame.  numberOY  ( 0 ) - Proportional y-offset versus frame.  buttonTween  ( 30 ) - Proportional pixel-offset between number buttons.  titleFont  ( native.systemFontBold ) - Font to use for tray title.  titleFontColor  ( { 0, 0, 0 } ) - Color to use for tray title.  titleFontSize  ( 52 ) - Font size to use for tray title.  numberFont  ( titleFont ) - Font to use for answer numbers.  numberFontColor  ( { 0, 0, 0 } ) - Color to use for answer numbers.  numberFontSize  ( 100 ) - Font size to use for answer numbers.  instructionsFont  ( native.systemFont ) - Font to use for instructions.  instructionsFontColor  ( { 0, 0, 0 } ) - Color to use for instructions.  instructionsFontSize  ( 60 ) - Font size to use for instructions.  questionFont  ( native.systemFont ) - Font to use for question.  questionFontColor  ( { 0, 0, 0 } ) - Color to use for question.  questionFontSize  ( 65 ) - Font size to use for question.  shakeAmplitude  ( 10 ) - How much to shake screen if wrong answer entered.  shakeTime  ( 500 ) - Shake for milliseconds if wrong answer entered.  completeDelay  ( 333 ) - If correct answer given, wait this long to close dialog.  onSuccess  ( function() end ) - Reference to your 'correct answer' listener.  onCancel  ( function() end ) - Reference to your 'canceled dialog' listener.  title  ( \"PARENTAL GATE\" ) - Title of gate.  instructions  ( \"to continue tap:\" ) - Intructions to show.  verticalRatios   - Table of named values to proportionally adjust vertical position of gate elements.  See  verticalRatios  below.  numberNames  - Table to translate numbers to strings. See  numberNames  below.", 
            "title": "Configuring Gates"
        }, 
        {
            "location": "/#verticalratios", 
            "text": "These are the default vertical ratios (expressed as percentage of tray.png height):  local verticalRatios  { \n    title           = 0.08, -- Title\n    numbers             = 0.28, -- Numbers\n    instructions    = 0.45, -- Instructions\n    question        = 0.55, -- Question\n    buttons             = 0.71, -- Inputs\n}  In example two, these are adjusted because the title isn't shown:  local myGate = gate.new( {\n      imagesPath              =  images/numbers_ex2 ,\n      onSuccess               =  onSuccess,\n      onCancel                = onCancel,\n      frameColor              = { 123/255, 1, 191/255 },\n      trayColor               = { 0.2, 0.3, 0.5 },\n      instructionsFontColor   = { 1,1,1 },\n      questionFontColor       = { 1, 1, 0 },\n      title                   =  , -- No title!    \n      instructions            =  enter these numbers: ,\n\n      -- Adjust vertical layout\n      verticalRatios          =  \n      { \n         title          = 0.0,\n         numbers        = 0.22,\n         instructions   = 0.40,\n         question       = 0.52,\n         buttons        = 0.68,\n      },\n   } )", 
            "title": "verticalRatios"
        }, 
        {
            "location": "/#numbernames", 
            "text": "The default  numberNames  table is defined as:  local numberNames = {}\nnumberNames[0] =  ZERO \nnumberNames[1] =  ONE \nnumberNames[2] =  TWO \nnumberNames[3] =  THREE \nnumberNames[4] =  FOUR \nnumberNames[5] =  FIVE \nnumberNames[6] =  SIX \nnumberNames[7] =  SEVEN \nnumberNames[8] =  EIGHT \nnumberNames[9] =  NINE   If you wanted to use  Italian , you could do this:  local numberNames = {}\nnumberNames[0] =  ZERO \nnumberNames[1] =  UNO \nnumberNames[2] =  DUO \nnumberNames[3] =  TRE \nnumberNames[4] =  QUATTRO \nnumberNames[5] =  CINQUE \nnumberNames[6] =  SEI \nnumberNames[7] =  SETTE \nnumberNames[8] =  OTTO \nnumberNames[9] =  NOVE \n\ngate.new( {\n   imagesPath   =  images/numbers_ex1 ,\n   onSuccess    = onSuccess,\n   onCancel     = onCancel,\n   numberNames = numberNames\n} )     Copyright   Roaming Gamer, LLC. 2008-2017; All Rights Reserved", 
            "title": "numberNames"
        }, 
        {
            "location": "/ssk2/", 
            "text": "Redirecting to homepage now...", 
            "title": "SSK2"
        }, 
        {
            "location": "/rgdocs/", 
            "text": "Redirecting to homepage now...", 
            "title": "RG Docs"
        }
    ]
}